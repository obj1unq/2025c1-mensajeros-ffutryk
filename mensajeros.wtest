import mensajeros.*

test "El paquete de George que no está pago no puede ser llevado por Neo a la matrix." {
  assert.notThat(paquete.puedeSerEntregado(neo, laMatrix))
}

test "El paquete de George que sí está pago puede ser llevado por Chuck a la matrix." {
  paquete.marcarComoPagado()
  
  assert.that(paquete.puedeSerEntregado(chuckNorris, laMatrix))
}

test "El paquete de George que sí está pago no puede ser llevado por Lincoln Hawk (80kg) a Brooklyn si es que utiliza un camión con un acoplado." {
  paquete.marcarComoPagado()
  lincolnHawk.pesoCorporal(80)
  camion.cantidadDeAcoples(1)
  lincolnHawk.vehiculo(camion)
  
  assert.notThat(paquete.puedeSerEntregado(lincolnHawk, puenteBrooklyn))
}

test "La entrega anterior puede hacerse si Lincoln Hawk usa una bicicleta." {
  paquete.marcarComoPagado()
  lincolnHawk.pesoCorporal(80)
  lincolnHawk.vehiculo(bicicleta)

  assert.that(paquete.puedeSerEntregado(lincolnHawk, puenteBrooklyn))
}

test "El paquete de George que sí está pago puede ser llevado por Neo a la matrix." {
  paquete.marcarComoPagado()

  assert.that(paquete.puedeSerEntregado(neo, laMatrix))
}

test "El paquete de George que sí está pago que podía ser llevado por Neo a la matrix ya no puede ser llevado tras quedarse sin crédito." {
  paquete.marcarComoPagado()
  assert.that(paquete.puedeSerEntregado(neo, laMatrix))

  neo.tieneCredito(false)
  assert.notThat(paquete.puedeSerEntregado(neo, laMatrix))
}

test "El paquete de George que sí está pago puede ser llevado por Neo sin problemas a Brooklyn" {
  paquete.marcarComoPagado()

  assert.that(paquete.puedeSerEntregado(neo, puenteBrooklyn))
}